(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{372:function(e,t,v){"use strict";v.r(t);var _=v(43),r=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"js的数据类型都有哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js的数据类型都有哪些"}},[e._v("#")]),e._v(" js的数据类型都有哪些?")]),e._v(" "),v("ul",[v("li",[e._v("6种基本数据类型("),v("code",[e._v("BigInt")]),e._v(": "),v("code",[e._v("es10")]),e._v(")\n"),v("ul",[v("li",[v("code",[e._v("null")])]),e._v(" "),v("li",[v("code",[e._v("undefined")])]),e._v(" "),v("li",[v("code",[e._v("Boolean")])]),e._v(" "),v("li",[v("code",[e._v("Number")])]),e._v(" "),v("li",[v("code",[e._v("String")])]),e._v(" "),v("li",[v("code",[e._v("Symbol")])])])]),e._v(" "),v("li",[e._v("引用类型\n"),v("ul",[v("li",[v("code",[e._v("Object")]),e._v(": 对象")]),e._v(" "),v("li",[e._v("特殊 "),v("code",[e._v("Object")]),e._v(" "),v("ul",[v("li",[e._v("其他引用类型\n"),v("ul",[v("li",[v("code",[e._v("Function")])]),e._v(" "),v("li",[v("code",[e._v("Array")])]),e._v(" "),v("li",[v("code",[e._v("Date")])]),e._v(" "),v("li",[v("code",[e._v("RegExp")])])])]),e._v(" "),v("li",[e._v("包装类型\n"),v("ul",[v("li",[v("code",[e._v("Boolean")])]),e._v(" "),v("li",[v("code",[e._v("String")])]),e._v(" "),v("li",[v("code",[e._v("Number")])])])])])])])])]),e._v(" "),v("h3",{attrs:{id:"symbol-的特点是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#symbol-的特点是什么"}},[e._v("#")]),e._v(" "),v("code",[e._v("Symbol")]),e._v(" 的特点是什么?")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("实例是唯一的, 想创建两个一样的, 需要使用 "),v("code",[e._v("Symbol.for()")])])]),e._v(" "),v("li",[v("p",[e._v("不能使用构造函数去创建, 通过 "),v("code",[e._v("Symbol()")]),e._v(" 函数生成")]),e._v(" "),v("blockquote",[v("p",[e._v("生成的 "),v("code",[e._v("symbol")]),e._v(" 为原始数据类型, 所以不能通过 "),v("code",[e._v("new")]),e._v(" 来创建")])])]),e._v(" "),v("li",[v("p",[e._v("作为 "),v("code",[e._v("Object")]),e._v(" 对象属性时, 只能 "),v("code",[e._v("Object.getOwnPropertySymbols")]),e._v(" 来获取, 使用 "),v("code",[e._v("for...in")]),e._v(", "),v("code",[e._v("Object.keys")]),e._v(", "),v("code",[e._v("Object.getOwnPropertyNames")]),e._v(" 遍历不到")])]),e._v(" "),v("li",[v("p",[e._v("应用场景")]),e._v(" "),v("ul",[v("li",[e._v("当做 "),v("code",[e._v("Object")]),e._v(" 对象的私有属性")]),e._v(" "),v("li",[e._v("用来替代常量")]),e._v(" "),v("li",[e._v("用来作为类的私有属性和方法, 还能防止属性污染")])])])]),e._v(" "),v("h3",{attrs:{id:"装箱-拆箱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#装箱-拆箱"}},[e._v("#")]),e._v(" 装箱/拆箱")]),e._v(" "),v("ul",[v("li",[e._v("自动装箱: 需要时, 原始类型自动转换成相应的包装对象, 以便调用包装对象的方法"),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("'123'.substr(1) // => 23\n// 等同于\nvar temp = new String('123')\ntemp.substr(1)\ntemp = null\n// 原始数据类型和装箱后的不同\nconsole.log('123') // => 123\nconsole.log(new String('123')) // => String {\"123\"}\n")])])])]),e._v(" "),v("li",[e._v("自动拆箱: 需要时, 原始类型包装对象自动转换为原始类型"),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var str = new String('123')\nconsole.log(typeof str) // => object\nstr += 3\nconsole.log(typeof str) // => string\n")])])])])]),e._v(" "),v("h3",{attrs:{id:"引用类型到基本类型的转换-拆箱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#引用类型到基本类型的转换-拆箱"}},[e._v("#")]),e._v(" 引用类型到基本类型的转换(拆箱)?")]),e._v(" "),v("ul",[v("li",[e._v("遵循 "),v("code",[e._v("toPrimitive")]),e._v(" 原则")]),e._v(" "),v("li",[e._v("ToPrimitive(input, [perferredType])\n"),v("ul",[v("li",[e._v("perferredType: "),v("strong",[e._v("引用类型要转换的类型")]),e._v(" "),v("ul",[v("li",[e._v("不传\n"),v("ul",[v("li",[e._v("如果 "),v("code",[e._v("input")]),e._v(" 是内置的 "),v("code",[e._v("Date")]),e._v(" 类型，"),v("code",[e._v("PreferredType")]),e._v(" 视为 "),v("code",[e._v("String")])]),e._v(" "),v("li",[e._v("否则为 "),v("code",[e._v("Number")])])])]),e._v(" "),v("li",[v("code",[e._v("Number")]),e._v(" "),v("ul",[v("li",[e._v("如果 "),v("code",[e._v("input")]),e._v(" 是原始类型, 直接返回")]),e._v(" "),v("li",[e._v("调用 "),v("code",[e._v("input.valueOf()")]),e._v(", 如果是原始类型就返回")]),e._v(" "),v("li",[e._v("调用 "),v("code",[e._v("input.toString()")]),e._v(", 如果是原始类型就返回")]),e._v(" "),v("li",[e._v("抛出 "),v("code",[e._v("TypeError")])])])]),e._v(" "),v("li",[v("code",[e._v("String")]),e._v(" "),v("ul",[v("li",[e._v("如果 "),v("code",[e._v("input")]),e._v(" 是原始类型, 直接返回")]),e._v(" "),v("li",[e._v("调用 "),v("code",[e._v("input.toString()")]),e._v(", 如果是原始类型就返回")]),e._v(" "),v("li",[e._v("调用 "),v("code",[e._v("input.valueOf()")]),e._v(", 如果是原始类型就返回")]),e._v(" "),v("li",[e._v("抛出 "),v("code",[e._v("TypeError")])])])])])])])])]),e._v(" "),v("h3",{attrs:{id:"发生类型转换的情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发生类型转换的情况"}},[e._v("#")]),e._v(" 发生类型转换的情况?")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("if")]),e._v(" 语句和逻辑语句\n"),v("ul",[v("li",[e._v("被转换为 "),v("code",[e._v("false")]),e._v(" 的情况\n"),v("ul",[v("li",[v("code",[e._v("null")])]),e._v(" "),v("li",[v("code",[e._v("undefined")])]),e._v(" "),v("li",[v("code",[e._v("''")])]),e._v(" "),v("li",[v("code",[e._v("NaN")])]),e._v(" "),v("li",[v("code",[e._v("0")])]),e._v(" "),v("li",[v("code",[e._v("false")])])])])])]),e._v(" "),v("li",[e._v("各种数学运算符\n"),v("ul",[v("li",[v("code",[e._v("+")]),e._v(" "),v("ul",[v("li",[e._v("一侧为 "),v("code",[e._v("String")]),e._v(", 另外一侧为其他类型, 则优先转换为 "),v("code",[e._v("String")]),e._v(", 再进行拼接")]),e._v(" "),v("li",[e._v("一侧为 "),v("code",[e._v("Number")]),e._v(", 另外一侧为原始类型, 则原始类型转换为 "),v("code",[e._v("Number")]),e._v(" 之后, 再进行运算")]),e._v(" "),v("li",[e._v("一侧为 "),v("code",[e._v("Number")]),e._v(", 另外一侧为引用类型, 则 "),v("code",[e._v("Number")]),e._v(" 转换为字符串, 和引用类型相拼接")])])]),e._v(" "),v("li",[e._v("其他符合\n"),v("ul",[v("li",[e._v("会将非 "),v("code",[e._v("Number")]),e._v(" 类型的数据转为 "),v("code",[e._v("Number")]),e._v(" 之后再进行运算")])])])])]),e._v(" "),v("li",[v("code",[e._v("==")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("NaN")]),e._v(": 和任何值比较都返回 "),v("code",[e._v("false")]),e._v("(包括它自己)")]),e._v(" "),v("li",[v("code",[e._v("Boolean")]),e._v(": 和其他值比较, 会先转换为 "),v("code",[e._v("Number")])]),e._v(" "),v("li",[v("code",[e._v("String")]),e._v(": 和 "),v("code",[e._v("Number")]),e._v(" 比较, 会先转换为 "),v("code",[e._v("Number")])]),e._v(" "),v("li",[v("code",[e._v("null")]),e._v(" 和 "),v("code",[e._v("undefined")]),e._v(": 两者比较(或相互各自比较)为 "),v("code",[e._v("true")]),e._v(", 两者和其他比较都为 "),v("code",[e._v("false")])]),e._v(" "),v("li",[e._v("原始类型和引用类型, 对象会按照 "),v("code",[e._v("ToPrimitive")]),e._v(" 转换为原始类型"),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("'[object Object]' == {} // => true\n'1,2,3' == [1, 2, 3]\n")])])])])])])]),e._v(" "),v("h3",{attrs:{id:"数据转换相关的面试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据转换相关的面试题"}},[e._v("#")]),e._v(" 数据转换相关的面试题")]),e._v(" "),v("ul",[v("li",[e._v("面试题: "),v("code",[e._v("[] == ![]")]),e._v(" 结果是什么? 为什么?\n"),v("ul",[v("li",[e._v("结果是 "),v("code",[e._v("true")])]),e._v(" "),v("li",[v("code",[e._v("!")]),e._v("的优先级最高, 所以 "),v("code",[e._v("![]")]),e._v(" 转换为 "),v("code",[e._v("false")]),e._v(", "),v("code",[e._v("boolean")]),e._v(" 和其他值比较, 先转换成数值, "),v("code",[e._v("false")]),e._v(" 转换成数值是 "),v("code",[e._v("0")]),e._v(", "),v("code",[e._v("[]")]),e._v("转换成数值也是 "),v("code",[e._v("0")]),e._v(", 所以相等")])])]),e._v(" "),v("li",[e._v("面试题: "),v("code",[e._v("[undefined] == false")]),e._v("结果是什么? 为什么?\n"),v("ul",[v("li",[e._v("结果是 "),v("code",[e._v("true")])]),e._v(" "),v("li",[v("code",[e._v("boolean")]),e._v(" 和其他值比较, 两边会先转换成数值, 两边都为 "),v("code",[e._v("0")]),e._v(", 所以相等")])])]),e._v(" "),v("li",[e._v("面试题: 如何让 "),v("code",[e._v("a == 1 && a == 2 && a == 3")]),e._v(" "),v("ul",[v("li",[v("details",[v("summary",[e._v("参考答案")]),e._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    value"),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("valueOf")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("value"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("shift")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" d "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\nconsole"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("d"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// => true")]),e._v("\n")])])])])])])]),e._v(" "),v("li",[e._v("面试题: "),v("code",[e._v("0.1+0.2=0.3")]),e._v("对不对? 为什么?\n"),v("ul",[v("li",[e._v("不对")]),e._v(" "),v("li",[e._v("转换成二进制时, 精度丢失, 所以相加后再转换10进制时, 导致结果不正确")]),e._v(" "),v("li",[e._v("IEEE 754\n"),v("ul",[v("li",[e._v("符号位: 标识正负的")]),e._v(" "),v("li",[e._v("指数位: 存储科学计数法的指数")]),e._v(" "),v("li",[e._v("尾数位: 存储科学计数法后的有效数字")])])]),e._v(" "),v("li",[v("a",{attrs:{href:"http://0.30000000000000004.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("0.30000000000000004.com"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("推荐\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/nefe/number-precision",target:"_blank",rel:"noopener noreferrer"}},[e._v("number-precision"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/josdejong/mathjs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("mathjs"),v("OutboundLink")],1)])])])])]),e._v(" "),v("li",[e._v("面试题: JavaScript 表示最大数字\n"),v("ul",[v("li",[v("code",[e._v("Number.MAX_VALUE")]),e._v(": 1.111...X 2"),v("sup",[e._v("1023")]),e._v(", 转换成十进制 "),v("code",[e._v("1.7976931348623157e+308")])]),e._v(" "),v("li",[e._v("IEEE 754\n"),v("ul",[v("li",[e._v("指数位: 能表示最大的数字 "),v("code",[e._v("1023")]),e._v("(十进制)")]),e._v(" "),v("li",[e._v("尾数位: 尾数位都是 "),v("code",[e._v("1")]),e._v(" 的情况")])])])])]),e._v(" "),v("li",[e._v("面试题: 最大安全数字\n"),v("ul",[v("li",[v("code",[e._v("Number.MAX_SAFE_INTEGER")]),e._v(": 1.111...X 2"),v("sup",[e._v("52")])]),e._v(" "),v("li",[e._v("推荐\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/justmoon/node-bignum",target:"_blank",rel:"noopener noreferrer"}},[e._v("node-bignum"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/substack/node-bigint",target:"_blank",rel:"noopener noreferrer"}},[e._v("node-bigint"),v("OutboundLink")],1)])])])])]),e._v(" "),v("li",[e._v("面试题: 操作运算符的优先级是什么？\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"noopener noreferrer"}},[e._v("优先级汇总表#mdn"),v("OutboundLink")],1)])])]),e._v(" "),v("li",[e._v("面试题:"),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("{} + 123 // => 123\n123 + {} // => 123[object Object]\n")])])]),v("ul",[v("li",[v("code",[e._v("{} + 123")]),e._v(", 会认为 "),v("code",[e._v("{}")]),e._v("是个代码块, 先执行了, 改成"),v("code",[e._v("let o = {}; console.log(o + 123)")]),e._v("就行了")]),e._v(" "),v("li",[v("code",[e._v("123 + {}")]),e._v(": 引用类型 "),v("code",[e._v("{}")]),e._v(" 会先执行 "),v("code",[e._v("ToPrimitive")]),e._v(", 第二个参数是 "),v("code",[e._v("Number")]),e._v(", 会先执行 "),v("code",[e._v("toString")]),e._v(", 返回 "),v("code",[e._v("[object Object]")]),e._v(", "),v("code",[e._v("123")]),e._v(" 数字和字符串相加, 就返回 "),v("code",[e._v("123[object Object]")])])])])]),e._v(" "),v("h3",{attrs:{id:"几种常见的-隐式类型-转换规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#几种常见的-隐式类型-转换规则"}},[e._v("#")]),e._v(" 几种常见的(隐式类型)转换规则?")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("toBoolean")]),e._v(" "),v("ul",[v("li",[v("details",[v("summary",[e._v("转换规则")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Argument Type")]),e._v(" "),v("th",[e._v("Result")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("Undefined")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("Null")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("Boolean")]),e._v(" "),v("td",[e._v("原值")])]),e._v(" "),v("tr",[v("td",[e._v("Number")]),e._v(" "),v("td",[e._v("+0、-0、NaN 为 false, 1 为 true")])]),e._v(" "),v("tr",[v("td",[e._v("String")]),e._v(" "),v("td",[e._v("'' 为 false, 非 '' 为true")])]),e._v(" "),v("tr",[v("td",[e._v("Symbol")]),e._v(" "),v("td",[e._v("true")])]),e._v(" "),v("tr",[v("td",[e._v("Object")]),e._v(" "),v("td",[e._v("true")])])])])])])])]),e._v(" "),v("li",[v("p",[e._v("toNumber")]),e._v(" "),v("ul",[v("li",[v("details",[v("summary",[e._v("转换规则")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Argument Type")]),e._v(" "),v("th",[e._v("Result")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("Undefined")]),e._v(" "),v("td",[e._v("NaN")])]),e._v(" "),v("tr",[v("td",[e._v("Null")]),e._v(" "),v("td",[e._v("+0")])]),e._v(" "),v("tr",[v("td",[e._v("Boolean")]),e._v(" "),v("td",[e._v("true 为 1, false 为 +0")])]),e._v(" "),v("tr",[v("td",[e._v("Number")]),e._v(" "),v("td",[e._v("原值")])]),e._v(" "),v("tr",[v("td",[e._v("String")]),e._v(" "),v("td",[e._v("'1' 为 数字, 非 '1' 为NaN")])]),e._v(" "),v("tr",[v("td",[e._v("Symbol")]),e._v(" "),v("td",[e._v("TypeError")])]),e._v(" "),v("tr",[v("td",[e._v("Object")]),e._v(" "),v("td",[e._v("先primValue = toPrimitive(argument, Number), 再toNumber(primValue)")])])])])])])])]),e._v(" "),v("li",[v("p",[e._v("toString")]),e._v(" "),v("ul",[v("li",[v("details",[v("summary",[e._v("转换规则")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Argument Type")]),e._v(" "),v("th",[e._v("Result")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("Undefined")]),e._v(" "),v("td",[e._v("'undefined'")])]),e._v(" "),v("tr",[v("td",[e._v("Null")]),e._v(" "),v("td",[e._v("'null''")])]),e._v(" "),v("tr",[v("td",[e._v("Boolean")]),e._v(" "),v("td",[e._v("true 为 'true', false 为 'false'")])]),e._v(" "),v("tr",[v("td",[e._v("Number")]),e._v(" "),v("td",[e._v("'1'")])]),e._v(" "),v("tr",[v("td",[e._v("String")]),e._v(" "),v("td",[e._v("原值")])]),e._v(" "),v("tr",[v("td",[e._v("Symbol")]),e._v(" "),v("td",[e._v("TypeError")])]),e._v(" "),v("tr",[v("td",[e._v("Object")]),e._v(" "),v("td",[e._v("先primValue = toPrimitive(argument, String), 再toString(先primValue)")])])])])])])])]),e._v(" "),v("li",[v("p",[e._v("举例: "),v("code",[e._v("new String({a: 1})")]),e._v("的转换是什么?")]),e._v(" "),v("ul",[v("li",[e._v("object => string")]),e._v(" "),v("li",[v("code",[e._v("toPrimtive(input, hint String)")]),e._v(", 调用 "),v("code",[e._v("input.toString()")]),e._v(", 返回 "),v("code",[e._v("[object Object]")])]),e._v(" "),v("li",[e._v("再调用 "),v("code",[e._v("toString('[object Object]')")]),e._v(" // => "),v("code",[e._v('String {"[object Object]"}')])])])]),e._v(" "),v("li",[v("p",[e._v("参考: "),v("a",{attrs:{href:"https://tc39.es/ecma262/#sec-toprimitive",target:"_blank",rel:"noopener noreferrer"}},[e._v("tc39#ecma262#sec-toprimitive"),v("OutboundLink")],1)])])]),e._v(" "),v("h3",{attrs:{id:"null-和-undefined-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#null-和-undefined-的区别"}},[e._v("#")]),e._v(" "),v("code",[e._v("null")]),e._v(" 和 "),v("code",[e._v("undefined")]),e._v(" 的区别")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("null")]),e._v(" 是空值, 是已经赋值过的, 转换为 "),v("code",[e._v("number")]),e._v(" 为0")]),e._v(" "),v("li",[v("code",[e._v("undefined")]),e._v(" 是没有赋值时的值,  转换为 "),v("code",[e._v("number")]),e._v(" 为NaN")])]),e._v(" "),v("h3",{attrs:{id:"参考资料"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://juejin.im/post/5cec1bcff265da1b8f1aa08f",target:"_blank",rel:"noopener noreferrer"}},[e._v("你真的掌握变量和类型了吗#CornardLi"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/post/5dc431a0e51d4504be09ca8c",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript类型转换"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/post/5cbaf130518825325050fb0a",target:"_blank",rel:"noopener noreferrer"}},[e._v("【JS迷你书】类型转换之装箱操作"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/post/5d3f8402f265da039e129574",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS最新基本数据类型：BigInt"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/camsong/blog/issues/9",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript 浮点数陷阱及解法"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/nWacVMwTpGBlMquZhRAvYg",target:"_blank",rel:"noopener noreferrer"}},[e._v("加减危机 —— 为什么会出现这样的结果？"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("文档类\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness#%E9%9D%9E%E4%B8%A5%E6%A0%BC%E7%9B%B8%E7%AD%89",target:"_blank",rel:"noopener noreferrer"}},[e._v("非严格相等"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"http://ecma-international.org/ecma-262/5.1/#sec-11.9.3",target:"_blank",rel:"noopener noreferrer"}},[e._v("ecma-262#sec-11.9.3"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://www.shuxuele.com/index-notation-powers.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("指数记数法与十的次方"),v("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);