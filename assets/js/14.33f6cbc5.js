(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{360:function(e,t,r){"use strict";r.r(t);var _=r(43),v=Object(_.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"http缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[e._v("#")]),e._v(" HTTP缓存")]),e._v(" "),r("h3",{attrs:{id:"http-的缓存形成过程是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http-的缓存形成过程是什么"}},[e._v("#")]),e._v(" HTTP 的缓存形成过程是什么?")]),e._v(" "),r("ul",[r("li",[e._v("客户端向服务端发起请求")]),e._v(" "),r("li",[e._v("服务端返回数据，并通过响应头决定缓存策略")]),e._v(" "),r("li",[e._v("浏览器根据缓存策略，来决定是否缓存资源\n"),r("ul",[r("li",[e._v("如果是，就将响应头和资源缓存下来")])])]),e._v(" "),r("li",[e._v("下次浏览器再次访问资源的时候，此时客户端会检查上次返回的 "),r("strong",[e._v("缓存策略")]),e._v("，根据策略的不同，浏览器决定是否读取缓存，还是与服务器 "),r("strong",[e._v("协商缓存")])])]),e._v(" "),r("h3",{attrs:{id:"什么时候会触发强缓存或者协商缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么时候会触发强缓存或者协商缓存"}},[e._v("#")]),e._v(" 什么时候会触发强缓存或者协商缓存")]),e._v(" "),r("ul",[r("li",[e._v("Progam: 权限最高，之后是 Cache-Control")]),e._v(" "),r("li",[e._v("Expires: 过期时间，是一个绝对值，受限于本地时间，如果本地时间更改，则缓存策略可能失效")]),e._v(" "),r("li",[e._v("Cache-Control: 缓存过期策略\n"),r("ul",[r("li",[r("code",[e._v("public")]),e._v(": 可以被中继缓存")]),e._v(" "),r("li",[r("code",[e._v("private")]),e._v(": 只能被本地缓存")]),e._v(" "),r("li",[r("code",[e._v("no-cache")]),e._v(": 先缓存本地, 但是必须与服务器验证缓存的"),r("strong",[e._v("新鲜度")]),e._v("才能使用")]),e._v(" "),r("li",[r("code",[e._v("no-store")]),e._v(": 不会产生任何缓存")])])]),e._v(" "),r("li",[e._v("协商缓存\n"),r("ul",[r("li",[e._v("触发条件\n"),r("ul",[r("li",[e._v("服务器返回资源没有 Cache-Control 或 Expires 字段")]),e._v(" "),r("li",[e._v("缓存资源过期")]),e._v(" "),r("li",[e._v("缓存策略设置为 "),r("code",[e._v("no-cache")])])])]),e._v(" "),r("li",[e._v("判断新鲜度\n"),r("ul",[r("li",[e._v("Last Modified/If-Modified-Since\n"),r("ul",[r("li",[e._v("首次请求: 客户端收到服务器 "),r("code",[e._v("Last Modified/Fri Nov 15 2019 18:02:43 GMT")]),e._v(" 响应部首")]),e._v(" "),r("li",[e._v("再次请求: 客户端发送给服务 "),r("code",[e._v("If-Modified-Since/Fri Nov 15 2019 18:02:43 GMT")]),e._v(" 给服务器\n"),r("ul",[r("li",[e._v("服务器资源跟客户端请求的 "),r("strong",[e._v("部首时间")]),e._v(" 一致, 证明客户端资源是最新的, 就会返回 "),r("code",[e._v("403")]),e._v(" 状态码\n"),r("ul",[r("li",[r("code",[e._v("403")]),e._v(" 状态码: 表示客户端直接使用缓存即可")])])]),e._v(" "),r("li",[e._v("否则返回最新资源")])])])])]),e._v(" "),r("li",[e._v("ETag/If-None-Match\n"),r("ul",[r("li",[e._v("流程: 同上")]),e._v(" "),r("li",[e._v("不同点:\n"),r("ul",[r("li",[r("code",[e._v("ETag")]),e._v(" 是根据服务器资源 "),r("strong",[e._v("内容")]),e._v(" 判断，是否是最新的\n"),r("ul",[r("li",[e._v("如果服务器资源内容发生变化，"),r("code",[e._v("ETag")]),e._v(" 会发生巨变")])])]),e._v(" "),r("li",[r("code",[e._v("ETag")]),e._v(" 比 "),r("code",[e._v("Last Modified")]),e._v(" 更精准")])])])])])])])])])]),e._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c4528a6f265da611a4822cc#heading-6",target:"_blank",rel:"noopener noreferrer"}},[e._v("彻底搞懂浏览器缓存机制"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c7a9f8c518825640d1dd503",target:"_blank",rel:"noopener noreferrer"}},[e._v("进阶必备的网络基础（下）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.codeceo.com/article/http-cache-backend-programmer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("写给后端程序员的HTTP缓存原理介绍"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b30d05ee51d45587c51d276",target:"_blank",rel:"noopener noreferrer"}},[e._v("图解 HTTP 的缓存机制 | 实用 HTTP"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cnodejs.org/topic/55210d88c4f5240812f55408",target:"_blank",rel:"noopener noreferrer"}},[e._v("Web 开发后端缓存思路"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/30780216",target:"_blank",rel:"noopener noreferrer"}},[e._v("Web静态资源缓存及优化"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/OptZnaAhuX8eRnIesRrFwA",target:"_blank",rel:"noopener noreferrer"}},[e._v("一文搞懂浏览器缓存机制"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/Q2h1EEKubAXkaM4g85Mkrw",target:"_blank",rel:"noopener noreferrer"}},[e._v("深入理解浏览器的缓存机制"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=v.exports}}]);